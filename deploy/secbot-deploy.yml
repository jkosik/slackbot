---

#Deploys secbot

# this block is mainly because Ubuntu xenial doesn't have  
- hosts: all
  become: yes
  gather_facts: no
  roles:
    - { role: ansible-py2-bootstrap, tags: [ "py2-bootstrap"] }

- hosts: all
  become: yes
  roles:
#    - { role: ansible-locale, when: ansible_os_family == 'Debian', tags: ['locale'] }
    - { role: ansible-fqdn, tags: ['fqdn'] }

- hosts: all
  become: yes
  tasks:
    - name: Copy .gitconfig for ubuntu user or other users
      template:
        src: .gitconfig
        dest: "/home/{{ item }}/.gitconfig"
        owner: "{{ item }}"
        group: "{{ item }}"
        mode: 0644
      with_items:
        - ubuntu

    - name: Copy .gitconfig for ubuntu user or other users
      template:
        src: .gitconfig
        dest: /root/.gitconfig
        owner: root
        group: root
        mode: 0644

    - name: Apt update
      apt:
        update_cache: yes

    - name: Install basic packages
      apt:
        name: "{{ item }}"
        allow_unauthenticated: yes
        state: present
      with_items:
        - git
        - mc
        - python
        - python3
        - python-pip
        - python3-pip
        - libssl-dev
        - qrencode
        - jq
      tags: basicpkg

    - name: Remove /data/bots
      file:
        state: absent
        path: "/data/bots"

    - name: Create /data/bots
      file:
        state: directory 
        path: "/data/bots"
        owner: ubuntu
        group: ubuntu

    - name: Cloning bots repo
      git:
        repo: "{{ bots_repo }}"
        dest: "/data/bots"
        update: yes
        force: yes
      become: ubuntu

    - name: Make everything in /plugins dir executable
      file:
        path: /data/bots/plugins
        mode: a+x
        recurse: yes

    - name: Add secbot public key to the target - user
      lineinfile:
        path: /home/ubuntu/.ssh/authorized_keys
        line: "{{ item }}"
      with_items:
        - "{{ secbot_pubkey }}"

    - name: Add secbot public key to the target - root
      lineinfile:
        path: /root/.ssh/authorized_keys
        line: "{{ item }}"
      with_items:
        - "{{ secbot_pubkey }}"


    - name: Install packages for bot functions
      command: "{{ item }}"
      with_items:
        - pip3 install slackclient
        - pip3 install authenticator
        - pip3 install pyotp
        - pip3 install shodan
 
    - name: Install packages for bot functions
      apt:
        name: "{{ item }}"
      with_items:
        - python3-openstackclient
        - python3-neutronclient
        - python3-novaclient
        - python3-heatclient

    - name: Create vault dir
      file:
        state: directory 
        path: "/home/ubuntu/vault"
        owner: ubuntu
        group: ubuntu
        mode: 0600

    - name: Copy secrets to vault
      copy:
        src: bots.py
        dest: "/home/ubuntu/vault/bots.py"
        owner: ubuntu
        group: ubuntu
        mode: 0600

    - name: Stop residual .py if running
      command: pkill python3
      ignore_errors: True

    - name: Touch log file
      file:
        path: "/var/log/{{ item }}"
        state: touch
        owner: syslog
        group: adm
        mode: 666
      with_items:
        - secbot.log

    - name: Add crontab job to restart secbot regularly in /etc/cron.d/secbot
      cron: minute="0" name="Secbot"
        cron_file="secbot"
        user="root"
        job="pkill python3; cd /data/bots; python3 secbot.py >/var/log/secbot.out 2>/var/log/secbot.err &"
      tags: cronjob

    - name: Create /data/ dir
      file:
        state: directory 
        path: "/data"
        owner: ubuntu
        group: ubuntu
        mode: 0644
      tags: clone

    - name: Git clone bots repo
      git:
        repo: "{{ bots_repo }}"
        dest: /data/bots
      clone: no
      ignore_errors: true #in case repo is cloned already. secbot-update.yml will pull updates if needed
      tags: clone





